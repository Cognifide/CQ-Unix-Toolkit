#!/bin/sh
_usage()
{
	cat << EOT
Usage: `basename $0` [OPTION...]
Invoke CRX repository check and fix on them. By default fixes are not performed.  
Read-only access to repositorys is used unless -f option is provided.  

Examples:
  cqchk -u admin -f              # Check repository and fix error automatically
  cqchk -i http://localhost:5510 # Check repository for localhost instance on
                                 # on tcp port 5510 without fixing anything
  cqchk -p secret                # Check reposiotry without fixing anything 
                                 # provided login password: secret

Options:

  -u                    use specified usernamed for connection
  -p                    use provided password for authentication
  -i                    use specified instance URL to connect
  -f                    force fixing erros when possible  

EOT
exit 1
}

CWD=`dirname $0`
API="$CWD/cqapi"
APITEST=`$API -P`
if [ $? -ne 0 ]
then
	echo "Fatal: cannot find or test cqapi command" >&2
	exit 1
fi

CURLBIN=`$API -c`
if [ $? -ne 0 ]
then
	echo "Fatal: cannot find curl" >&2
	exit 1
fi


# API common options
cmdapi=`    $API -P $@`
username=`  echo "${cmdapi}" | cut -f1`
password=`  echo "${cmdapi}" | cut -f2`
instance=`  echo "${cmdapi}" | cut -f3`
passed=`    echo "${cmdapi}" | cut -f4`
apigetopts=`echo "${cmdapi}" | cut -f5`

# Custom arguments
fix=false
while getopts ":f${apigetopts}" opt; do
  case $opt in
     f)  
      fix=true;;
    \?)
      echo "Invalid option: -$OPTARG" >&2; _usage;;
     :)
      echo "Option -$OPTARG requires an argument." >&2; _usage;;
  esac
done
shift $((OPTIND-1))

if [ $# -ge 1 -o $passed -eq 0 ];
then
	_usage
fi


REFERER="$instance/system/console/jmx/com.adobe.granite%3Atype%3DRepository"
AUTH="$username:$password"
FILEPATH="/system/console/jmx/com.adobe.granite%3Atype%3DRepository/op/traversa\
lCheck/java.lang.String%2Cjava.lang.Boolean%2Cjava.lang.Boolean"
REFERERHEADER="Referer: $REFERER"

$CURLBIN \
	-s \
	-u "$AUTH" \
	-H "$REFERERHEADER" \
	-X POST --data "logEach=false&fixInconsistencies=${fix}" \
	"$instance${FILEPATH}" 

EXITCODE=$?
$API -C $EXITCODE
exit $EXITCODE

