#!/bin/sh
_usage()
{
	cat << EOT
Usage: `basename $0` [OPTION...] file1 file2 ... 
Upload CRX ZIP packages to CRX Package Manager using instance URL.
 
Examples:
  cqput -u admin pack.zip        # Upload package named pack.zip from current
                                 # directory
  cqput -i http://localhost:5510 # Upload 2 packages for localhost instance on
        -p secret stuff1.zip     # tcp port 5510 named stuff1.zip and stuff2.zip
        stuff2.zip               # with password provided: secret 

Options:

  -u                    use specified usernamed for connection
  -p                    use provided password for authentication
  -i                    use specified instance URL to connect


EOT
exit 1
}

CWD=`dirname $0`
API="$CWD/cqapi"
APITEST=`$API -P`
if [ $? -ne 0 ]
then
	echo "Fatal: cannot find or test cqapi command" >&2
	exit 1
fi

CURLBIN=`$API -c`
if [ $? -ne 0 ]
then
	echo "Fatal: cannot find curl" >&2
	exit 1
fi


# API common options
cmdapi=`    $API -P $@`
username=`  echo "${cmdapi}" | cut -f1`
password=`  echo "${cmdapi}" | cut -f2`
instance=`  echo "${cmdapi}" | cut -f3`
passed=`    echo "${cmdapi}" | cut -f4`
apigetopts=`echo "${cmdapi}" | cut -f5`

# Custom arguments
while getopts ":f${apigetopts}" opt; do
  case $opt in
     g)  
      group="$OPTARG";;
    \?)
      echo "Invalid option: -$OPTARG" >&2; _usage;;
     :)
      echo "Option -$OPTARG requires an argument." >&2; _usage;;
  esac
done
shift $((OPTIND-1))

if [ $# -eq 0 -o $passed -eq 0 ];
then
	_usage
fi


REFERER="$instance/crx/packmgr"
AUTH="$username:$password"
FILEPATH="/crx/packmgr/service.jsp"
REFERERHEADER="Referer: $REFERER"

bad=0
while [ $# -ne 0 ] 
do
        file=$1
        $CURLBIN \
        	-s \
        	-u "$AUTH" \
        	-H "$REFERERHEADER" \
                -F file=@"$file" \
                -F force=true
                -F install=false
        	"$instance${FILEPATH}" 
        EXITCODE=$?
        $API -C $EXITCODE
        if [ "$EXITCODE" -ne 0 ]
        then
            bad=1
        fi
done
if [ $bad -eq 1 ]
then
    exit 1
fi
